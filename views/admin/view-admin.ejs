<%- include('../modern-header') %>

        <!-- Page Content -->
        <div class="page-content">
            <!-- Page Header -->
            <div class="page-header">
                <div class="header-content">
                    <div class="header-text">
                        <h2 class="page-subtitle">Admin Management</h2>
                        <p class="page-description">Manage admin users, permissions, and access controls</p>
                    </div>
                    <div class="header-actions">
                        <button class="btn btn-primary" onclick="window.location.href='/admin/add-admin'">
                            <i class="fas fa-plus"></i>
                            Add New Admin
                        </button>
                        <button class="btn btn-secondary" onclick="AdminPanel.exportToCSV(getAdminData(), 'admins.csv')">
                            <i class="fas fa-download"></i>
                            Export Data
                        </button>
                    </div>
                </div>
            </div>

            <!-- Search and Filters -->
            <div class="form-section">
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            <label class="form-label">Search Admins</label>
                            <input type="text" class="form-control table-search" id="adminSearch" placeholder="Search by name, email, or role...">
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group">
                            <label class="form-label">Filter by Role</label>
                            <select class="form-select" id="roleFilter">
                                <option value="">All Roles</option>
                                <option value="super">Super Admin</option>
                                <option value="admin">Admin</option>
                                <option value="moderator">Moderator</option>
                            </select>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group">
                            <label class="form-label">Filter by Status</label>
                            <select class="form-select" id="statusFilter">
                                <option value="">All Status</option>
                                <option value="active">Active</option>
                                <option value="inactive">Inactive</option>
                            </select>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Admins Table -->
            <div class="form-section">
                <div class="section-title">
                    <i class="fas fa-users"></i>
                    Admin Users
                </div>
                
                <div class="table-responsive">
                    <table class="data-table" id="adminsTable">
                        <thead>
                            <tr>
                                <th data-sort="name">Name</th>
                                <th data-sort="email">Email</th>
                                <th data-sort="role">Role</th>
                                <th data-sort="status">Status</th>
                                <th data-sort="lastLogin">Last Login</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody id="adminsTableBody">
                            <!-- Admin data will be loaded here -->
                        </tbody>
                    </table>
                </div>

                <!-- Pagination -->
                <div class="pagination-container">
                    <div class="pagination-info">
                        Showing <span id="startRecord">1</span> to <span id="endRecord">10</span> of <span id="totalRecords">0</span> admins
                    </div>
                    <div class="pagination-controls">
                        <button class="btn btn-outline-secondary" id="prevPage" onclick="changePage(-1)">
                            <i class="fas fa-chevron-left"></i> Previous
                        </button>
                        <span class="page-numbers" id="pageNumbers"></span>
                        <button class="btn btn-outline-secondary" id="nextPage" onclick="changePage(1)">
                            Next <i class="fas fa-chevron-right"></i>
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Scripts -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.min.js"></script>
    <script src="/assets/js/modern-admin.js"></script>
    <script>
        // Sample admin data
        const adminData = [
            {
                id: 1,
                firstName: 'John',
                lastName: 'Doe',
                email: 'john.doe@example.com',
                role: 'super',
                status: 'active',
                lastLogin: '2024-01-15 10:30:00',
                profileImage: '/uploads/admins/seed-default.png'
            },
            {
                id: 2,
                firstName: 'Jane',
                lastName: 'Smith',
                email: 'jane.smith@example.com',
                role: 'admin',
                status: 'active',
                lastLogin: '2024-01-14 15:45:00',
                profileImage: '/uploads/admins/seed-default.png'
            },
            {
                id: 3,
                firstName: 'Mike',
                lastName: 'Johnson',
                email: 'mike.johnson@example.com',
                role: 'moderator',
                status: 'inactive',
                lastLogin: '2024-01-10 09:15:00',
                profileImage: '/uploads/admins/seed-default.png'
            }
        ];

        let currentPage = 1;
        const itemsPerPage = 10;
        let filteredData = [...adminData];

        // Initialize page
        document.addEventListener('DOMContentLoaded', function() {
            loadAdminData();
            setupEventListeners();
            AdminPanel.init();
        });

        function setupEventListeners() {
            // Search functionality
            document.getElementById('adminSearch').addEventListener('input', function() {
                filterAdmins();
            });

            // Filter functionality
            document.getElementById('roleFilter').addEventListener('change', function() {
                filterAdmins();
            });

            document.getElementById('statusFilter').addEventListener('change', function() {
                filterAdmins();
            });
        }

        function filterAdmins() {
            const searchTerm = document.getElementById('adminSearch').value.toLowerCase();
            const roleFilter = document.getElementById('roleFilter').value;
            const statusFilter = document.getElementById('statusFilter').value;

            filteredData = adminData.filter(admin => {
                const matchesSearch = admin.firstName.toLowerCase().includes(searchTerm) ||
                                    admin.lastName.toLowerCase().includes(searchTerm) ||
                                    admin.email.toLowerCase().includes(searchTerm);
                const matchesRole = !roleFilter || admin.role === roleFilter;
                const matchesStatus = !statusFilter || admin.status === statusFilter;

                return matchesSearch && matchesRole && matchesStatus;
            });

            currentPage = 1;
            loadAdminData();
        }

        function loadAdminData() {
            const startIndex = (currentPage - 1) * itemsPerPage;
            const endIndex = startIndex + itemsPerPage;
            const pageData = filteredData.slice(startIndex, endIndex);

            const tableBody = document.getElementById('adminsTableBody');
            tableBody.innerHTML = pageData.map(admin => `
                <tr>
                    <td>
                        <div class="admin-info">
                            <img src="${admin.profileImage}" alt="Profile" class="admin-avatar">
                            <div>
                                <div class="admin-name">${admin.firstName} ${admin.lastName}</div>
                                <div class="admin-id">ID: ${admin.id}</div>
                            </div>
                        </div>
                    </td>
                    <td>${admin.email}</td>
                    <td>
                        <span class="role-badge role-${admin.role}">
                            ${getRoleLabel(admin.role)}
                        </span>
                    </td>
                    <td>
                        <span class="status-badge status-${admin.status}">
                            ${admin.status}
                        </span>
                    </td>
                    <td>${formatDate(admin.lastLogin)}</td>
                    <td>
                        <div class="action-buttons">
                            <button class="btn btn-sm btn-outline-primary" onclick="viewAdmin(${admin.id})" title="View">
                                <i class="fas fa-eye"></i>
                            </button>
                            <button class="btn btn-sm btn-outline-secondary" onclick="editAdmin(${admin.id})" title="Edit">
                                <i class="fas fa-edit"></i>
                            </button>
                            <button class="btn btn-sm btn-outline-danger" onclick="deleteAdmin(${admin.id})" title="Delete">
                                <i class="fas fa-trash"></i>
                            </button>
                        </div>
                    </td>
                </tr>
            `).join('');

            updatePagination();
        }

        function getRoleLabel(role) {
            const labels = {
                'super': 'Super Admin',
                'admin': 'Admin',
                'moderator': 'Moderator'
            };
            return labels[role] || role;
        }

        function formatDate(dateString) {
            const date = new Date(dateString);
            return date.toLocaleDateString() + ' ' + date.toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'});
        }

        function updatePagination() {
            const totalPages = Math.ceil(filteredData.length / itemsPerPage);
            const startRecord = (currentPage - 1) * itemsPerPage + 1;
            const endRecord = Math.min(currentPage * itemsPerPage, filteredData.length);

            document.getElementById('startRecord').textContent = startRecord;
            document.getElementById('endRecord').textContent = endRecord;
            document.getElementById('totalRecords').textContent = filteredData.length;

            // Update page numbers
            const pageNumbers = document.getElementById('pageNumbers');
            let pageHtml = '';
            for (let i = 1; i <= totalPages; i++) {
                pageHtml += `<button class="btn btn-sm ${i === currentPage ? 'btn-primary' : 'btn-outline-secondary'}" onclick="goToPage(${i})">${i}</button>`;
            }
            pageNumbers.innerHTML = pageHtml;

            // Update prev/next buttons
            document.getElementById('prevPage').disabled = currentPage === 1;
            document.getElementById('nextPage').disabled = currentPage === totalPages;
        }

        function changePage(direction) {
            const totalPages = Math.ceil(filteredData.length / itemsPerPage);
            const newPage = currentPage + direction;
            
            if (newPage >= 1 && newPage <= totalPages) {
                currentPage = newPage;
                loadAdminData();
            }
        }

        function goToPage(page) {
            currentPage = page;
            loadAdminData();
        }

        function getAdminData() {
            return filteredData.map(admin => ({
                Name: `${admin.firstName} ${admin.lastName}`,
                Email: admin.email,
                Role: getRoleLabel(admin.role),
                Status: admin.status,
                'Last Login': admin.lastLogin
            }));
        }

        // Admin action functions
        function viewAdmin(id) {
            AdminPanel.showNotification(`Viewing admin ID: ${id}`, 'info');
        }

        function editAdmin(id) {
            AdminPanel.showNotification(`Editing admin ID: ${id}`, 'info');
        }

        function deleteAdmin(id) {
            if (confirm('Are you sure you want to delete this admin?')) {
                AdminPanel.showNotification(`Admin ID: ${id} deleted successfully`, 'success');
                // Remove from data and reload
                const index = adminData.findIndex(admin => admin.id === id);
                if (index > -1) {
                    adminData.splice(index, 1);
                    filterAdmins();
                }
            }
        }
    </script>

    <style>
        .admin-info {
            display: flex;
            align-items: center;
            gap: 12px;
        }

        .admin-avatar {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            object-fit: cover;
        }

        .admin-name {
            font-weight: 500;
            color: #333;
        }

        .admin-id {
            font-size: 12px;
            color: #6b7280;
        }

        .role-badge, .status-badge {
            padding: 4px 8px;
            border-radius: 12px;
            font-size: 11px;
            font-weight: 500;
            text-transform: uppercase;
        }

        .role-super {
            background: #fef3c7;
            color: #92400e;
        }

        .role-admin {
            background: #dbeafe;
            color: #1e40af;
        }

        .role-moderator {
            background: #d1fae5;
            color: #065f46;
        }

        .status-active {
            background: #d1fae5;
            color: #065f46;
        }

        .status-inactive {
            background: #fee2e2;
            color: #991b1b;
        }

        .action-buttons {
            display: flex;
            gap: 5px;
        }

        .pagination-container {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-top: 20px;
            padding-top: 20px;
            border-top: 1px solid #e9ecef;
        }

        .pagination-controls {
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .page-numbers {
            display: flex;
            gap: 5px;
        }

        .btn-outline-secondary:disabled {
            opacity: 0.5;
            cursor: not-allowed;
        }

        .table-responsive {
            border-radius: 8px;
            overflow: hidden;
        }
    </style>
<%- include('../modern-footer') %>